{"gear":{"name":"hcp-icafix","label":"HCP: ICAFIX Functional Pipeline","description":"Runs ICA-FIX denoising on functional data preprocessed according to the HCP Minimal Preprocessing Pipeline. This Gear is based on scripts from the v4.0-alpha release of the ICAFIX, PostFix, and RestingStateStats pipelines. NOTE: This Gear requires that HCP-STRUCT and HCP-FUNC Gears have been run, as the outputs of those gears are required inputs here. Also note that more than 1 HCP-FUNC output can be provided as input.","author":"Human Connectome Project","maintainer":"Flywheel <support@flywheel.io>","license":"Other","url":"https://github.com/Washington-University/Pipelines","source":"https://github.com/flywheel-apps/hcp-icafix","cite":"(1) G. Salimi-Khorshidi, G. Douaud, C.F. Beckmann, M.F. Glasser, L. Griffanti S.M. Smith. Automatic denoising of functional MRI data: Combining independent component analysis and hierarchical fusion of classifiers. NeuroImage, 90:449-68, 2014 (2) L. Griffanti, G. Salimi-Khorshidi, C.F. Beckmann, E.J. Auerbach, G. Douaud, C.E. Sexton, E. Zsoldos, K. Ebmeier, N. Filippini, C.E. Mackay, S. Moeller, J.G. Xu, E. Yacoub, G. Baselli, K. Ugurbil, K.L. Miller, and S.M. Smith. ICA-based artefact removal and accelerated fMRI acquisition for improved resting state network imaging. NeuroImage, 95:232-47, 2014","version":"0.1.5","custom":{"docker-image":"flywheel/hcp-icafix:0.1.5","flywheel":{"suite":"Human Connectome Project"}},"flywheel":"0","config":{"FIXClassifier":"proident aliquip enim deserunt tempor","RegName":"cupidatat reprehenderit commodo qui labore","HighPassFilter":74190195},"inputs":{"CustomClassifier":{"description":"User-supplied .RData file for FIX component classification. If provide, pipeline overrides FIXClassifier config param","base":"file","optional":true},"StructZip":{"description":"Zipped output from HCP-Struct pipeline","base":"file","type":"zip","optional":false},"FuncZip":{"description":"Zipped output from HCP-Func pipeline","base":"file","type":"zip","optional":false},"FuncZip2":{"description":"Zipped output from HCP-Func pipeline","base":"file","type":"zip","optional":true},"FuncZip3":{"description":"Zipped output from HCP-Func pipeline","base":"file","type":"zip","optional":true},"FuncZip4":{"description":"Zipped output from HCP-Func pipeline","base":"file","type":"zip","optional":true},"FuncZip5":{"description":"Zipped output from HCP-Func pipeline","base":"file","type":"zip","optional":true},"FuncZip6":{"description":"Zipped output from HCP-Func pipeline","base":"file","type":"zip","optional":true},"FuncZip7":{"description":"Zipped output from HCP-Func pipeline","base":"file","type":"zip","optional":true},"FuncZip8":{"description":"Zipped output from HCP-Func pipeline","base":"file","type":"zip","optional":true},"FuncZip9":{"description":"Zipped output from HCP-Func pipeline","base":"file","type":"zip","optional":true},"FuncZip10":{"description":"Zipped output from HCP-Func pipeline","base":"file","type":"zip","optional":true}}},"exchange":{"git-commit":"91c076476e227e8f9076223ac8b6a68b6be8ead6","rootfs-hash":"sha384:a0bdc84a9f83cffa73ab33ca0fa61c5c8ce30267ea23a5fb9e7c77938c8ab027cda19a97b8b61389952793b1ea6150c7","rootfs-url":"https://storage.googleapis.com/flywheel-exchange/flywheel-hcp-icafix-sha384-a0bdc84a9f83cffa73ab33ca0fa61c5c8ce30267ea23a5fb9e7c77938c8ab027cda19a97b8b61389952793b1ea6150c7.tgz"},"invocation-schema":{"config":{"HighPassFilter":56566839,"RegName":"et quis","FIXClassifier":"Duis nulla occaecat in commodo"},"inputs":{"StructZip":{"type":"zip","Duisf97":"aute ullamco exercitation Ut nulla","nostrud85b":60482394,"fugiat757":-33368427,"ind17":91807526},"FuncZip":{"type":"zip","Ut8":"esse voluptate anim veniam est","in_9c7":true},"FuncZip6":{"type":"zip","officia_d75":"officia ea deserunt nostrud labore"},"CustomClassifier":{"cupidatat14":20002427,"elitc":false},"FuncZip9":{"type":"zip","in_7d1":true,"nisi_9":-46242413.297929645},"FuncZip10":{"type":"zip","proident_":-42177818.85070799,"id_":22143530,"aliqua_da4":"laboris ipsum"}}}}
