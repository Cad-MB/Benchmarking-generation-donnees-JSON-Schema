{"spec":{"podSelector":{"aliqua_251":false,"esse_f9":88655801.29344094,"ested3":20355132.16574514,"do_b20":84262944.92408326,"cupidatat11f":76737792.79662389},"egress":[{"ports":[{"port":-33268353,"protocol":"aute dolor"},{"protocol":"ipsum sit consequat dolor cillum","port":-86446788},{"port":"in Excepteur minim culpa commodo","protocol":"officia ut quis nulla","Ut_95":true},{"protocol":"eu voluptate et","port":71539951}],"to":[{"ipBlock":{"cidr":"elit","except":["enim","ut ad","occaecat in incididunt"]},"namespaceSelector":{"fugiat_8":"proident aliquip","voluptate9_6":false},"podSelector":{"matchExpressions":[{"key":"labore dolore exercitation","operator":"anim ea","values":["esse aliquip","cillum Duis eiusmod est in"]},{"key":"non","operator":"laborum laboris esse","values":["sit pariatur"]},{"key":"ea quis","operator":"est","values":["ut consectetur","Excepteur consectetur officia","ad ut sunt consectetur enim","aliqua veniam ipsum qui","exercitation magna ex sed et"]},{"key":"deserunt dolore adipisicing","operator":"Duis occaecat cillum","values":["sed voluptate mollit eiusmod Duis","elit amet dolor quis aliquip"]},{"key":"laboris ut in ex mollit","operator":"dolore aliquip ut"}]}},{"podSelector":{"description":"This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods.\n\nIf NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace."},"ipBlock":{"cidr":"commodo sit occaecat","except":["mollit Ut","id ea ex aute eiusmod","qui cillum"]},"namespaceSelector":{"description":"Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.\n\nIf PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector."}},{"ipBlock":{"cidr":"in labore irure aliquip","except":["voluptate Duis reprehenderit","enim","culpa magna dolore"]},"podSelector":{"description":"This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods.\n\nIf NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace."},"namespaceSelector":{"description":"Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.\n\nIf PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector."}},{"namespaceSelector":{"description":"Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.\n\nIf PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector."},"ut_98":false},{"namespaceSelector":{"description":"Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.\n\nIf PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector."},"culpaf8c":false,"dolor_8f6":"laboris ea ipsum","mollit_f8":-77092717.02696064}]},{"ports":[{"protocol":"nulla","id174":false},{"port":"commodo sint exercitation","protocol":"elit reprehenderit sunt velit","ut_48":-41637597.1813137,"dolor06":91013357.21619931,"nulla47":false,"ea0_3":"minim eu enim in dolor"},{"protocol":"nostrud laboris velit","anim_4":46089821.038977385},{"port":"aute incididunt commodo minim","protocol":"minim adipisicing nisi cupidatat","officia_700":true,"consequat_544":true}],"to":[{"namespaceSelector":{"description":"Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.\n\nIf PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector."},"podSelector":{"description":"This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods.\n\nIf NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace."},"ipBlock":{"cidr":"qui deserunt occaecat cillum","except":["id voluptate irure aliquip","mollit minim occaecat enim fugiat","eu consequat anim voluptate sunt","incididunt"]}},{"ipBlock":{"cidr":"proident"},"podSelector":{"description":"This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods.\n\nIf NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace."},"namespaceSelector":{"description":"Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.\n\nIf PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector."}}]}],"policyTypes":["fugiat amet"],"ingress":[{"from":[],"ports":[{"aliqua3":"Lorem exercitation do nisi"},{"port":-92784601,"protocol":"irure consectetur","quis893":78998337.74789372,"occaecat0":true,"aliquip_3":"incididunt","labore_ab":-94095947.242482}]},{"from":[],"ports":[{"port":-62463577,"protocol":"in labore occaecat","veniam6f":92446616.16347435,"tempor_b":true,"elit_ec":86359892,"elit_b":-68802541.88141826},{"port":51168575,"protocol":"exercitation dolore","id82":11650525}],"dolore2":-27772361.27908154,"reprehenderit9":"deserunt veniam tempor nulla"}]},"apiVersion":"networking.k8s.io/v1","metadata":{"ownerReferences":[{"apiVersion":"in Excepteur dolor","kind":"velit aliquip non","name":"elit officia","uid":"officia","blockOwnerDeletion":true}],"uid":"veniam irure eiusmod esse quis","namespace":"minim ad dolore sint","nulla_08":-31122544.31716597}}
